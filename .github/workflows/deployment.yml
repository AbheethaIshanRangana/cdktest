name: Deployment

on: 
  #push: 
  #  branches: [ main ]
  workflow_dispatch:
    branches: [ main ]
    inputs:
      env:
        type: choice
        default: dev
        description: Select environment
        options:
        - dev
        - qa
        - uat 
        - ppe
        - prd

jobs:

  docker-build-deploy:
    name: Build & Push docker image
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: latest
        run: |
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  Deploy-Infra-And-App:
    name: Deploy application and infrastructure
    needs: [ docker-build-deploy ]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
        #with:
        #  path: infra/
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: cd infra/ && npm ci
        #uses: bahmutov/npm-install@v1
        #with: 
        #  working-directory: ./infra/
      - name: Install aws-cdk 
        run: cd infra/ && npm install -g aws-cdk@2.62.2
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@master
        with: 
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: 'us-east-1'
      - name: Bootstrap stack 
        run: cd infra/ && StackEnv=${{ github.event.inputs.env }} cdk bootstrap 
      - name: Synth stack 
        run: cd infra/ && StackEnv=${{ github.event.inputs.env }} cdk synth 
      - name: Deploy stack 
        run: cd infra/ && StackEnv=${{ github.event.inputs.env }} cdk deploy --all --require-approval never